version: 2

aliases:
  - &attach-workspace
    at: build

  - &restore-cache
    key: node-modules-{{ checksum "yarn.lock" }}
  - &yarn-install
    name: Install dependencies
    command: yarn install --no-progress --ignore-platform --ignore-engines
  - &yarn-install-tools
    name: Install build tools
    command: sudo yarn global add codecov yalc
  - &tests
    command: node scripts/test.js --skip-build
    environment:
      NODE_ICU_DATA: /home/circleci/project/node_modules/full-icu
  - &tests-integration
    command: node ./scripts/integration.js

jobs:
  build:
    docker:
      - image: circleci/openjdk:latest-node-browsers

    steps:
      - checkout

      - restore-cache: *restore-cache
      - run: *yarn-install

      - save_cache:
          key: node-modules-{{ checksum "yarn.lock" }}
          paths:
            - node_modules

      - run: node ./scripts/build/

      - persist_to_workspace:
          root: build
          paths:
            - packages

  test-node-latest:
    docker:
      - image: circleci/node:latest

    steps:
      - checkout
      - attach-workspace: *attach-workspace
      - restore-cache: *restore-cache
      - run: *yarn-install
      - run: *yarn-install-tools
      - run: *tests
      - run: codecov
      - store_test_results:
          path: ./results/
          when: always

  test-node-10:
    docker:
      - image: circleci/node:10

    steps:
      - checkout
      - attach-workspace: *attach-workspace
      - restore-cache: *restore-cache
      - run: *yarn-install
      - run: *yarn-install-tools
      - run: *tests

  integration-js:
    docker:
      - image: circleci/node:latest

    steps:
      - checkout
      - attach-workspace: *attach-workspace
      - run: *yarn-install-tools

      - restore-cache:
          key: node-modules-js-{{ checksum "examples/js/yarn.lock" }}
      - run: cd examples/js; yarn
      - save-cache:
          key: node-modules-js-{{ checksum "examples/js/yarn.lock" }}
          paths:
            - examples/js/node_modules

      - run: *tests-integration
      - run: chmod +x examples/js/node_modules/.bin/lingui
      - run: cd examples/js; yarn test

  integration-react:
    docker:
      - image: circleci/node:latest

    steps:
      - checkout
      - attach-workspace: *attach-workspace
      - run: *yarn-install-tools

      - restore-cache:
          key: node-modules-react-{{ checksum "examples/react/yarn.lock" }}
      - run: cd examples/react; yarn
      - save-cache:
          key: node-modules-react-{{ checksum "examples/react/yarn.lock" }}
          paths:
            - examples/react/node_modules

      - run: *tests-integration
      - run: chmod +x examples/react/node_modules/.bin/lingui
      - run: cd examples/react; yarn test

  test-linter:
    docker:
      - image: circleci/node:latest

    steps:
      - checkout
      - restore-cache: *restore-cache
      - run: *yarn-install
      - run: yarn run lint

  build-docs:
    docker:
      - image: circleci/python:3.7-node
        environment:
          PYGMENTS_NODE_COMMAND: /usr/local/bin/node

    steps:
      - checkout

      - restore_cache:
          key: pipenv-{{ checksum "Pipfile.lock" }}

      - run: pipenv install

      - save_cache:
          key: pipenv-{{ checksum "Pipfile.lock" }}
          paths:
            - "{{ pipenv --venv }}"

      - run: yarn global add vercel

      - run: cd docs; pipenv run make html

      - deploy:
          command: $(yarn global bin)/vercel --public --token $NOW_TOKEN --name lingui-docs docs/_build/html
#          command: ./scripts/legacy/deploy-docs.sh

workflows:
  version: 2
  test_n_deploy:
    jobs:
      #      - build-docs:
      #          filters:
      #            branches:
      #              ignore:
      #                - master

      - build

      - test-linter:
          requires:
            - build
      - test-node-latest:
          requires:
            - build
      - test-node-10:
          requires:
            - build
#      - integration-js:
#          requires:
#          - build
#      - integration-react:
#          requires:
#          - build
