version: 2

workflows:
  version: 2
  test_n_deploy:
    jobs:
      - test-linter
      - test-node8
      - build-docs:
          filters:
            branches:
              only: master

jobs:
  test-node8: &test-template
    docker:
      - image: circleci/node:8

    steps:
      - checkout

      - run:
          name: Install build tools
          command: sudo yarn global add codecov yalc

      - restore_cache:
          key: node-modules-{{ checksum "yarn.lock" }}

      - run:
          name: Install dependencies
          command: yarn install

      - save_cache:
          key: node-modules-{{ checksum "yarn.lock" }}
          paths:
              - node_modules

      - run: node scripts/test.js

      - run:
          name: Send coverage report
          command: |
              if [ "${NODEJS}" == "4" ]; then
                codecov
              fi

      - store_test_results:
          path: ./results/
          when: always

#  test-node6:
#    <<: *test-template
#
#    docker:
#      - image: circleci/node:6

  test-linter:
    docker:
      - image: circleci/node:latest

    steps:
      - checkout

      - run:
          name: Install build tools
          command: sudo yarn global add codecov yalc

      - restore_cache:
          key: node-modules-{{ checksum "yarn.lock" }}

      - run:
          name: Install dependencies
          command: yarn install

      - save_cache:
          key: node-modules-{{ checksum "yarn.lock" }}
          paths:
              - node_modules

      - run: yarn run lint

  build-docs:
    docker:
      - image: circleci/python:latest
        environment:
          PYGMENTS_NODE_COMMAND: /usr/local/bin/node

    steps:
      - checkout

      - restore_cache:
          key: pipenv-{{ checksum "Pipfile.lock" }}

      - run: pipenv install

      - save_cache:
          key: pipenv-{{ checksum "Pipfile.lock" }}
          paths:
              - "{{ pipenv --venv }}"

      - run: cd docs; pipenv run make html

      - deploy:
          command: ./scripts/legacy/deploy-docs.sh
