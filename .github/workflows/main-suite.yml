name: main-suite

on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - main
      - next

jobs:
  test:
    runs-on: ${{ matrix.os }}
    if: "! contains(toJSON(github.event.commits.*.message), '[skip ci]')"
    env:
      CI: true
      GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
    strategy:
      matrix:
        node: ["10", "12", "14"]
        os: [ubuntu-latest, windows-latest]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup node
        uses: actions/setup-node@v2-beta
        with:
          always-auth: true
          node-version: ${{ matrix.node }}
          scope: '@lingui'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies if needed
        run: yarn install --frozen-lockfile --pure-lockfile

      - name: Unit Testing
        run: yarn test

      - name: Linting & Types
        if: matrix.node == '14' && matrix.os == 'ubuntu-latest'
        run: yarn lint:all

      - name: Build packages
        if: matrix.node == '14'
        run: yarn release:build

      - name: Integration Testing
        if: matrix.node == '14'
        run: yarn test:integration

      - name: Check coverage
        if: matrix.node == '14' && matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v1
