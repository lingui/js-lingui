// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Catalog POT Flow Should get translations from template if locale file not presented 1`] = `
{
  2ZeN02: Test String,
  mY42CM: Hello World,
}
`;

exports[`Catalog collect should extract messages from source files 1`] = `
{
  Component A: {
    context: undefined,
    extractedComments: [],
    message: undefined,
    origin: [
      [
        collect/componentA/componentA.js,
        1,
      ],
    ],
  },
  Component B: {
    context: undefined,
    extractedComments: [],
    message: undefined,
    origin: [
      [
        collect/componentB.js,
        1,
      ],
    ],
  },
  Hello World: {
    context: undefined,
    extractedComments: [
      Comment A,
      Comment A again,
      Hello comment,
    ],
    message: undefined,
    origin: [
      [
        collect/componentA/componentA.js,
        2,
      ],
      [
        collect/componentA/componentA.js,
        3,
      ],
      [
        collect/componentA/index.js,
        1,
      ],
    ],
  },
  custom.id: {
    context: undefined,
    extractedComments: [],
    message: Message with id,
    origin: [
      [
        collect/componentA/componentA.js,
        4,
      ],
    ],
  },
}
`;

exports[`Catalog collect should extract only files passed on options 1`] = `
{
  Component A: {
    context: undefined,
    extractedComments: [],
    message: undefined,
    origin: [
      [
        collect/componentA/componentA.js,
        1,
      ],
    ],
  },
  Hello World: {
    context: undefined,
    extractedComments: [
      Comment A,
      Comment A again,
      Hello comment,
    ],
    message: undefined,
    origin: [
      [
        collect/componentA/componentA.js,
        2,
      ],
      [
        collect/componentA/componentA.js,
        3,
      ],
      [
        collect/componentA/index.js,
        1,
      ],
    ],
  },
  custom.id: {
    context: undefined,
    extractedComments: [],
    message: Message with id,
    origin: [
      [
        collect/componentA/componentA.js,
        4,
      ],
    ],
  },
}
`;

exports[`Catalog collect should support Flow syntax if enabled 1`] = `{}`;

exports[`Catalog collect should support JSX and Typescript 1`] = `
{
  ID Some: {
    context: undefined,
    extractedComments: [],
    message: Message with id some,
    origin: [
      [
        collect-typescript-jsx/macro.tsx,
        11,
      ],
    ],
  },
  MHrjPM: {
    context: undefined,
    extractedComments: [],
    message: Title,
    origin: [
      [
        collect-typescript-jsx/macro.tsx,
        19,
      ],
    ],
  },
  Nu4oKW: {
    context: undefined,
    extractedComments: [
      description,
    ],
    message: Description,
    origin: [
      [
        collect-typescript-jsx/macro.tsx,
        6,
      ],
    ],
  },
  YikuIL: {
    context: Context1,
    extractedComments: [],
    message: Some message,
    origin: [
      [
        collect-typescript-jsx/macro.tsx,
        18,
      ],
    ],
  },
  d1Kdl3: {
    context: undefined,
    extractedComments: [],
    message: Hi, my name is {name},
    origin: [
      [
        collect-typescript-jsx/macro.tsx,
        17,
      ],
    ],
  },
  esnaQO: {
    context: undefined,
    extractedComments: [],
    message: {count, plural, one {# book} other {# books}},
    origin: [
      [
        collect-typescript-jsx/macro.tsx,
        21,
      ],
    ],
  },
  xDAtGP: {
    context: undefined,
    extractedComments: [],
    message: Message,
    origin: [
      [
        collect-typescript-jsx/macro.tsx,
        4,
      ],
    ],
  },
}
`;

exports[`Catalog make should collect and write catalogs 1`] = `
{
  cs: null,
  en: null,
}
`;

exports[`Catalog make should collect and write catalogs 2`] = `
{
  cs: {
    Component A: {
      comments: [],
      context: null,
      extractedComments: [],
      flags: [
        explicit-id,
      ],
      obsolete: false,
      origin: [
        [
          collect/componentA/componentA.js,
          1,
        ],
      ],
      translation: ,
    },
    Hello World: {
      comments: [],
      context: null,
      extractedComments: [
        Comment A,
        Comment A again,
        Hello comment,
      ],
      flags: [
        explicit-id,
      ],
      obsolete: false,
      origin: [
        [
          collect/componentA/componentA.js,
          2,
        ],
        [
          collect/componentA/componentA.js,
          3,
        ],
        [
          collect/componentA/index.js,
          1,
        ],
      ],
      translation: ,
    },
    custom.id: {
      comments: [],
      context: null,
      extractedComments: [],
      flags: [
        explicit-id,
      ],
      obsolete: false,
      origin: [
        [
          collect/componentA/componentA.js,
          4,
        ],
      ],
      translation: ,
    },
  },
  en: {
    Component A: {
      comments: [],
      context: null,
      extractedComments: [],
      flags: [
        explicit-id,
      ],
      obsolete: false,
      origin: [
        [
          collect/componentA/componentA.js,
          1,
        ],
      ],
      translation: ,
    },
    Hello World: {
      comments: [],
      context: null,
      extractedComments: [
        Comment A,
        Comment A again,
        Hello comment,
      ],
      flags: [
        explicit-id,
      ],
      obsolete: false,
      origin: [
        [
          collect/componentA/componentA.js,
          2,
        ],
        [
          collect/componentA/componentA.js,
          3,
        ],
        [
          collect/componentA/index.js,
          1,
        ],
      ],
      translation: ,
    },
    custom.id: {
      comments: [],
      context: null,
      extractedComments: [],
      flags: [
        explicit-id,
      ],
      obsolete: false,
      origin: [
        [
          collect/componentA/componentA.js,
          4,
        ],
      ],
      translation: ,
    },
  },
}
`;

exports[`Catalog make should merge with existing catalogs 1`] = `
{
  cs: {
    mY42CM: {
      comments: [],
      context: null,
      extractedComments: [],
      flags: [],
      message: Hello World,
      obsolete: false,
      origin: [],
      translation: Ahoj Brno,
    },
  },
  en: {
    mY42CM: {
      comments: [],
      context: null,
      extractedComments: [],
      flags: [],
      message: Hello World,
      obsolete: false,
      origin: [],
      translation: Ahoj Brno,
    },
  },
}
`;

exports[`Catalog make should merge with existing catalogs 2`] = `
{
  cs: {
    Component A: {
      comments: [],
      context: null,
      extractedComments: [],
      flags: [
        explicit-id,
      ],
      obsolete: false,
      origin: [
        [
          collect/componentA/componentA.js,
          1,
        ],
      ],
      translation: ,
    },
    Component B: {
      comments: [],
      context: null,
      extractedComments: [],
      flags: [
        explicit-id,
      ],
      obsolete: false,
      origin: [
        [
          collect/componentB.js,
          1,
        ],
      ],
      translation: ,
    },
    Hello World: {
      comments: [],
      context: null,
      extractedComments: [
        Comment A,
        Comment A again,
        Hello comment,
      ],
      flags: [
        explicit-id,
      ],
      obsolete: false,
      origin: [
        [
          collect/componentA/componentA.js,
          2,
        ],
        [
          collect/componentA/componentA.js,
          3,
        ],
        [
          collect/componentA/index.js,
          1,
        ],
      ],
      translation: ,
    },
    custom.id: {
      comments: [],
      context: null,
      extractedComments: [],
      flags: [
        explicit-id,
      ],
      obsolete: false,
      origin: [
        [
          collect/componentA/componentA.js,
          4,
        ],
      ],
      translation: ,
    },
    mY42CM: {
      comments: [],
      context: null,
      extractedComments: [
        js-lingui-id: mY42CM,
      ],
      flags: [],
      message: Hello World,
      obsolete: true,
      origin: [],
      translation: Ahoj Brno,
    },
  },
  en: {
    Component A: {
      comments: [],
      context: null,
      extractedComments: [],
      flags: [
        explicit-id,
      ],
      obsolete: false,
      origin: [
        [
          collect/componentA/componentA.js,
          1,
        ],
      ],
      translation: ,
    },
    Component B: {
      comments: [],
      context: null,
      extractedComments: [],
      flags: [
        explicit-id,
      ],
      obsolete: false,
      origin: [
        [
          collect/componentB.js,
          1,
        ],
      ],
      translation: ,
    },
    Hello World: {
      comments: [],
      context: null,
      extractedComments: [
        Comment A,
        Comment A again,
        Hello comment,
      ],
      flags: [
        explicit-id,
      ],
      obsolete: false,
      origin: [
        [
          collect/componentA/componentA.js,
          2,
        ],
        [
          collect/componentA/componentA.js,
          3,
        ],
        [
          collect/componentA/index.js,
          1,
        ],
      ],
      translation: ,
    },
    custom.id: {
      comments: [],
      context: null,
      extractedComments: [],
      flags: [
        explicit-id,
      ],
      obsolete: false,
      origin: [
        [
          collect/componentA/componentA.js,
          4,
        ],
      ],
      translation: ,
    },
    mY42CM: {
      comments: [],
      context: null,
      extractedComments: [
        js-lingui-id: mY42CM,
      ],
      flags: [],
      message: Hello World,
      obsolete: true,
      origin: [],
      translation: Ahoj Brno,
    },
  },
}
`;

exports[`Catalog make should only update the specified locale 1`] = `
{
  cs: null,
  en: null,
}
`;

exports[`Catalog make should only update the specified locale 2`] = `
{
  cs: null,
  en: {
    Component A: {
      comments: [],
      context: null,
      extractedComments: [],
      flags: [
        explicit-id,
      ],
      obsolete: false,
      origin: [
        [
          collect/componentA/componentA.js,
          1,
        ],
      ],
      translation: ,
    },
    Hello World: {
      comments: [],
      context: null,
      extractedComments: [
        Comment A,
        Comment A again,
        Hello comment,
      ],
      flags: [
        explicit-id,
      ],
      obsolete: false,
      origin: [
        [
          collect/componentA/componentA.js,
          2,
        ],
        [
          collect/componentA/componentA.js,
          3,
        ],
        [
          collect/componentA/index.js,
          1,
        ],
      ],
      translation: ,
    },
    custom.id: {
      comments: [],
      context: null,
      extractedComments: [],
      flags: [
        explicit-id,
      ],
      obsolete: false,
      origin: [
        [
          collect/componentA/componentA.js,
          4,
        ],
      ],
      translation: ,
    },
  },
}
`;

exports[`Catalog makeTemplate should collect and write a template 1`] = `null`;

exports[`Catalog makeTemplate should collect and write a template 2`] = `
{
  Component A: {
    comments: [],
    context: null,
    extractedComments: [],
    flags: [
      explicit-id,
    ],
    obsolete: false,
    origin: [
      [
        collect/componentA/componentA.js,
        1,
      ],
    ],
    translation: ,
  },
  Hello World: {
    comments: [],
    context: null,
    extractedComments: [
      Comment A,
      Comment A again,
      Hello comment,
    ],
    flags: [
      explicit-id,
    ],
    obsolete: false,
    origin: [
      [
        collect/componentA/componentA.js,
        2,
      ],
      [
        collect/componentA/componentA.js,
        3,
      ],
      [
        collect/componentA/index.js,
        1,
      ],
    ],
    translation: ,
  },
  custom.id: {
    comments: [],
    context: null,
    extractedComments: [],
    flags: [
      explicit-id,
    ],
    obsolete: false,
    origin: [
      [
        collect/componentA/componentA.js,
        4,
      ],
    ],
    translation: ,
  },
}
`;

exports[`Catalog read should read file in given format 1`] = `
{
  obsolete: {
    comments: [],
    context: null,
    extractedComments: [],
    flags: [
      explicit-id,
    ],
    obsolete: true,
    origin: [],
    translation: Is marked as obsolete,
  },
  static: {
    comments: [],
    context: null,
    extractedComments: [],
    flags: [
      explicit-id,
    ],
    obsolete: false,
    origin: [],
    translation: Static message,
  },
  veryLongString: {
    comments: [],
    context: null,
    extractedComments: [],
    flags: [
      explicit-id,
    ],
    obsolete: false,
    origin: [],
    translation: One morning, when Gregor Samsa woke from troubled dreams, he found himself transformed in his bed into a horrible vermin. He lay on his armour-like back, and if he lifted his head a little he could see his brown belly, slightly domed and divided by arches into stiff sections. The bedding was hardly able to cover it and seemed ready to slide off any moment. His many legs, pitifully thin compared with the size of the rest of him, waved about helplessly as he looked. "What's happened to me?" he thought. It wasn't a dream. His room, a proper human,
  },
  withComments: {
    comments: [
      Translator comment,
      This one might come from developer,
    ],
    context: null,
    extractedComments: [],
    flags: [
      explicit-id,
    ],
    obsolete: false,
    origin: [],
    translation: Support translator comments separately,
  },
  withDescription: {
    comments: [],
    context: null,
    extractedComments: [
      Description is comment from developers to translators,
    ],
    flags: [
      explicit-id,
    ],
    obsolete: false,
    origin: [],
    translation: Message with description,
  },
  withFlags: {
    comments: [],
    context: null,
    extractedComments: [],
    flags: [
      fuzzy,
      otherFlag,
      explicit-id,
    ],
    obsolete: false,
    origin: [],
    translation: Keeps any flags that are defined,
  },
  withMultipleOrigins: {
    comments: [],
    context: null,
    extractedComments: [],
    flags: [
      explicit-id,
    ],
    obsolete: false,
    origin: [
      [
        src/App.js,
        4,
      ],
      [
        src/Component.js,
        2,
      ],
    ],
    translation: Message with multiple origin,
  },
  withOrigin: {
    comments: [],
    context: null,
    extractedComments: [],
    flags: [
      explicit-id,
    ],
    obsolete: false,
    origin: [
      [
        src/App.js,
        4,
      ],
    ],
    translation: Message with origin,
  },
  xC8QeX: {
    comments: [],
    context: null,
    extractedComments: [
      js-lingui-id: pXy+hm,
    ],
    flags: [],
    message: Message with default hash id,
    obsolete: false,
    origin: [],
    translation: Translation for: Message with default-hash id,
  },
}
`;

exports[`Catalog read should read file in previous format 1`] = `null`;

exports[`Catalog readAll should read existing catalogs for all locales 1`] = `
{
  cs: {
    mY42CM: {
      comments: [],
      context: null,
      extractedComments: [],
      flags: [],
      message: Hello World,
      obsolete: false,
      origin: [],
      translation: Ahoj Brno,
    },
  },
  en: {
    mY42CM: {
      comments: [],
      context: null,
      extractedComments: [],
      flags: [],
      message: Hello World,
      obsolete: false,
      origin: [],
      translation: Hello World,
    },
  },
}
`;

exports[`Catalog should convert catalog format 1`] = `
msgid ""
msgstr ""
"Project-Id-Version: \\n"
"Report-Msgid-Bugs-To: \\n"
"POT-Creation-Date: \\n"
"PO-Revision-Date: \\n"
"Last-Translator: \\n"
"Language: \\n"
"Language-Team: \\n"
"Content-Type: \\n"
"Content-Transfer-Encoding: \\n"
"Plural-Forms: \\n"

msgid "static"
msgstr "Static message"

msgid "veryLongString"
msgstr "One morning, when Gregor Samsa woke from troubled dreams, he found himself transformed in his bed into a horrible vermin. He lay on his armour-like back, and if he lifted his head a little he could see his brown belly, slightly domed and divided by arches into stiff sections. The bedding was hardly able to cover it and seemed ready to slide off any moment. His many legs, pitifully thin compared with the size of the rest of him, waved about helplessly as he looked. \\"What's happened to me?\\" he thought. It wasn't a dream. His room, a proper human"
`;

exports[`cleanObsolete should remove obsolete messages from catalog 1`] = `
{
  Label: {
    obsolete: false,
    origin: [
      [
        catalog.test.ts,
        1,
      ],
    ],
    translation: Label,
  },
}
`;

exports[`order should order messages alphabetically 1`] = `
{
  LabelA: {
    obsolete: false,
    origin: [
      [
        catalog.test.ts,
        1,
      ],
    ],
    translation: A,
  },
  LabelB: {
    obsolete: false,
    origin: [
      [
        catalog.test.ts,
        1,
      ],
    ],
    translation: B,
  },
  LabelC: {
    obsolete: false,
    origin: [
      [
        catalog.test.ts,
        1,
      ],
    ],
    translation: C,
  },
  LabelD: {
    obsolete: false,
    origin: [
      [
        catalog.test.ts,
        1,
      ],
    ],
    translation: D,
  },
}
`;

exports[`order should order messages alphabetically 2`] = `
[
  LabelA,
  LabelB,
  LabelC,
  LabelD,
]
`;

exports[`order should order messages by origin 1`] = `
{
  LabelA: {
    obsolete: false,
    origin: [
      [
        file2.js,
        3,
      ],
    ],
    translation: A,
  },
  LabelB: {
    obsolete: false,
    origin: [
      [
        file1.js,
        2,
      ],
      [
        file2.js,
        2,
      ],
    ],
    translation: B,
  },
  LabelC: {
    obsolete: false,
    origin: [
      [
        file1.js,
        1,
      ],
    ],
    translation: C,
  },
  LabelD: {
    obsolete: false,
    origin: [
      [
        file2.js,
        100,
      ],
    ],
    translation: D,
  },
}
`;

exports[`order should order messages by origin 2`] = `
[
  LabelC,
  LabelB,
  LabelA,
  LabelD,
]
`;
