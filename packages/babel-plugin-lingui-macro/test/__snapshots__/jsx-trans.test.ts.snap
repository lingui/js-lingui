// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Elements are replaced with placeholders 1`] = `
import { Trans } from "@lingui/react/macro";
<Trans>
  Hello <strong>World!</strong>
  <br />
  <p>
    My name is{" "}
    <a href="/about">
      {" "}
      <em>{name}</em>
    </a>
  </p>
</Trans>;

↓ ↓ ↓ ↓ ↓ ↓

import { Trans as _Trans } from "@lingui/react";
<_Trans
  {
    /*i18n*/
    ...{
      id: "k9gsHO",
      message: "Hello <0>World!</0><1/><2>My name is <3> <4>{name}</4></3></2>",
      values: {
        name: name,
      },
      components: {
        0: <strong />,
        1: <br />,
        2: <p />,
        3: <a href="/about" />,
        4: <em />,
      },
    }
  }
/>;

`;

exports[`Elements inside expression container 1`] = `
import { Trans } from "@lingui/react/macro";
<Trans>{<span>Component inside expression container</span>}</Trans>;

↓ ↓ ↓ ↓ ↓ ↓

import { Trans as _Trans } from "@lingui/react";
<_Trans
  {
    /*i18n*/
    ...{
      id: "1cZQQW",
      message: "<0>Component inside expression container</0>",
      components: {
        0: <span />,
      },
    }
  }
/>;

`;

exports[`Elements without children 1`] = `
import { Trans } from "@lingui/react/macro";
<Trans>{<br />}</Trans>;

↓ ↓ ↓ ↓ ↓ ↓

import { Trans as _Trans } from "@lingui/react";
<_Trans
  {
    /*i18n*/
    ...{
      id: "SCJtqt",
      message: "<0/>",
      components: {
        0: <br />,
      },
    }
  }
/>;

`;

exports[`Expressions are converted to positional arguments 1`] = `
import { Trans } from "@lingui/react/macro";
<Trans>
  Property {props.name}, function {random()}, array {array[index]}, constant{" "}
  {42}, object {new Date()}, everything {props.messages[index].value()}
</Trans>;

↓ ↓ ↓ ↓ ↓ ↓

import { Trans as _Trans } from "@lingui/react";
<_Trans
  {
    /*i18n*/
    ...{
      id: "HjKDmx",
      message:
        "Property {0}, function {1}, array {2}, constant {3}, object {4}, everything {5}",
      values: {
        0: props.name,
        1: random(),
        2: array[index],
        3: 42,
        4: new Date(),
        5: props.messages[index].value(),
      },
    }
  }
/>;

`;

exports[`Generate ID from message 1`] = `
import { Trans } from "@lingui/react/macro";
<Trans>Hello World</Trans>;

↓ ↓ ↓ ↓ ↓ ↓

import { Trans as _Trans } from "@lingui/react";
<_Trans
  {
    /*i18n*/
    ...{
      id: "mY42CM",
      message: "Hello World",
    }
  }
/>;

`;

exports[`Generate different id when context provided 1`] = `
import { Trans } from "@lingui/react/macro";
<Trans>Hello World</Trans>;
<Trans context="my context">Hello World</Trans>;

↓ ↓ ↓ ↓ ↓ ↓

import { Trans as _Trans } from "@lingui/react";
<_Trans
  {
    /*i18n*/
    ...{
      id: "mY42CM",
      message: "Hello World",
    }
  }
/>;
<_Trans
  {
    /*i18n*/
    ...{
      id: "SO/WB8",
      message: "Hello World",
      context: "my context",
    }
  }
/>;

`;

exports[`HTML attributes are handled 1`] = `
import { Trans } from "@lingui/react/macro";
<Trans>
  <Text>This should work &nbsp;</Text>
</Trans>;

↓ ↓ ↓ ↓ ↓ ↓

import { Trans as _Trans } from "@lingui/react";
<_Trans
  {
    /*i18n*/
    ...{
      id: "K/1Xpr",
      message: "<0>This should work \\xA0</0>",
      components: {
        0: <Text />,
      },
    }
  }
/>;

`;

exports[`Ignore JSXEmptyExpression 1`] = `
import { Trans } from "@lingui/react/macro";
<Trans>Hello {/* and I cannot stress this enough */} World</Trans>;

↓ ↓ ↓ ↓ ↓ ↓

import { Trans as _Trans } from "@lingui/react";
<_Trans
  {
    /*i18n*/
    ...{
      id: "i0M2R8",
      message: "Hello  World",
    }
  }
/>;

`;

exports[`JSX Macro inside JSX conditional expressions 1`] = `
import { Trans } from "@lingui/react/macro";
<Trans>
  Hello, {props.world ? <Trans>world</Trans> : <Trans>guys</Trans>}
</Trans>;

↓ ↓ ↓ ↓ ↓ ↓

import { Trans as _Trans } from "@lingui/react";
<_Trans
  {
    /*i18n*/
    ...{
      id: "UT5PlM",
      message: "Hello, {0}",
      values: {
        0: props.world ? (
          <_Trans
            {
              /*i18n*/
              ...{
                id: "ELi2P3",
                message: "world",
              }
            }
          />
        ) : (
          <_Trans
            {
              /*i18n*/
              ...{
                id: "39nd+2",
                message: "guys",
              }
            }
          />
        ),
      },
    }
  }
/>;

`;

exports[`JSX Macro inside JSX multiple nested conditional expressions 1`] = `
import { Trans } from "@lingui/react/macro";
<Trans>
  Hello,{" "}
  {props.world ? (
    <Trans>world</Trans>
  ) : props.b ? (
    <Trans>nested</Trans>
  ) : (
    <Trans>guys</Trans>
  )}
</Trans>;

↓ ↓ ↓ ↓ ↓ ↓

import { Trans as _Trans } from "@lingui/react";
<_Trans
  {
    /*i18n*/
    ...{
      id: "UT5PlM",
      message: "Hello, {0}",
      values: {
        0: props.world ? (
          <_Trans
            {
              /*i18n*/
              ...{
                id: "ELi2P3",
                message: "world",
              }
            }
          />
        ) : props.b ? (
          <_Trans
            {
              /*i18n*/
              ...{
                id: "lV+268",
                message: "nested",
              }
            }
          />
        ) : (
          <_Trans
            {
              /*i18n*/
              ...{
                id: "39nd+2",
                message: "guys",
              }
            }
          />
        ),
      },
    }
  }
/>;

`;

exports[`Preserve custom ID (literal expression) 1`] = `
import { Trans } from "@lingui/react/macro";
<Trans id={"msg.hello"}>Hello World</Trans>;

↓ ↓ ↓ ↓ ↓ ↓

import { Trans as _Trans } from "@lingui/react";
<_Trans
  {
    /*i18n*/
    ...{
      id: "msg.hello",
      message: "Hello World",
    }
  }
/>;

`;

exports[`Preserve custom ID (string literal) 1`] = `
import { Trans } from "@lingui/react/macro";
<Trans id="msg.hello">Hello World</Trans>;

↓ ↓ ↓ ↓ ↓ ↓

import { Trans as _Trans } from "@lingui/react";
<_Trans
  {
    /*i18n*/
    ...{
      id: "msg.hello",
      message: "Hello World",
    }
  }
/>;

`;

exports[`Preserve custom ID (template expression) 1`] = `
import { Trans } from "@lingui/react/macro";
<Trans id={\`msg.hello\`}>Hello World</Trans>;

↓ ↓ ↓ ↓ ↓ ↓

import { Trans as _Trans } from "@lingui/react";
<_Trans
  {
    /*i18n*/
    ...{
      id: "msg.hello",
      message: "Hello World",
    }
  }
/>;

`;

exports[`Production - all props kept if extract: true 1`] = `
import { Trans } from "@lingui/react/macro";
<Trans id="msg.hello" comment="Hello World">
  Hello World
</Trans>;

↓ ↓ ↓ ↓ ↓ ↓

import { Trans as _Trans } from "@lingui/react";
<_Trans
  {
    /*i18n*/
    ...{
      id: "msg.hello",
      message: "Hello World",
      comment: "Hello World",
    }
  }
/>;

`;

exports[`Production - import type doesn't interference on normal import 1`] = `
import type { withI18nProps } from "@lingui/react";
import { Trans } from "@lingui/react/macro";
<Trans id="msg.hello" comment="Hello World">
  Hello World
</Trans>;

↓ ↓ ↓ ↓ ↓ ↓

import { Trans as _Trans } from "@lingui/react";
<_Trans
  {
    /*i18n*/
    ...{
      id: "msg.hello",
    }
  }
/>;

`;

exports[`Production - only essential props are kept 1`] = `
import { Trans } from "@lingui/react/macro";
<Trans id="msg.hello" context="my context" comment="Hello World">
  Hello World
</Trans>;

↓ ↓ ↓ ↓ ↓ ↓

import { Trans as _Trans } from "@lingui/react";
<_Trans
  {
    /*i18n*/
    ...{
      id: "msg.hello",
    }
  }
/>;

`;

exports[`Quoted JSX attributes are handled 1`] = `
import { Trans } from "@lingui/react/macro";
<Trans>Speak "friend"!</Trans>;
<Trans id="custom-id">Speak "friend"!</Trans>;

↓ ↓ ↓ ↓ ↓ ↓

import { Trans as _Trans } from "@lingui/react";
<_Trans
  {
    /*i18n*/
    ...{
      id: "NWmRwM",
      message: 'Speak "friend"!',
    }
  }
/>;
<_Trans
  {
    /*i18n*/
    ...{
      id: "custom-id",
      message: 'Speak "friend"!',
    }
  }
/>;

`;

exports[`Should not process non JSXElement nodes 1`] = `
import { Trans } from "@lingui/react/macro";
type X = typeof Trans;
const cmp = <Trans>Hello</Trans>;

↓ ↓ ↓ ↓ ↓ ↓

import { Trans as _Trans } from "@lingui/react";
const cmp = (
  <_Trans
    {
      /*i18n*/
      ...{
        id: "uzTaYi",
        message: "Hello",
      }
    }
  />
);

`;

exports[`Should preserve reserved props: \`comment\`, \`context\`, \`render\`, \`id\` 1`] = `
import { Trans } from "@lingui/react/macro";
<Trans
  comment="Comment for translator"
  context="translation context"
  id="custom.id"
  render={() => {}}
>
  Hello World
</Trans>;

↓ ↓ ↓ ↓ ↓ ↓

import { Trans as _Trans } from "@lingui/react";
<_Trans
  render={() => {}}
  {
    /*i18n*/
    ...{
      id: "custom.id",
      message: "Hello World",
      comment: "Comment for translator",
      context: "translation context",
    }
  }
/>;

`;

exports[`Strings as children are preserved 1`] = `
import { Trans } from "@lingui/react/macro";
<Trans>{"hello {count, plural, one {world} other {worlds}}"}</Trans>;

↓ ↓ ↓ ↓ ↓ ↓

import { Trans as _Trans } from "@lingui/react";
<_Trans
  {
    /*i18n*/
    ...{
      id: "U8dd/d",
      message: "hello {count, plural, one {world} other {worlds}}",
    }
  }
/>;

`;

exports[`Strip whitespace around arguments 1`] = `
import { Trans } from "@lingui/react/macro";
<Trans>Strip whitespace around arguments: '{name}'</Trans>;

↓ ↓ ↓ ↓ ↓ ↓

import { Trans as _Trans } from "@lingui/react";
<_Trans
  {
    /*i18n*/
    ...{
      id: "tRMgLt",
      message: "Strip whitespace around arguments: '{name}'",
      values: {
        name: name,
      },
    }
  }
/>;

`;

exports[`Strip whitespace around tags but keep forced spaces 1`] = `
import { Trans } from "@lingui/react/macro";
<Trans>
  Strip whitespace around tags, but keep <strong>forced spaces</strong>!
</Trans>;

↓ ↓ ↓ ↓ ↓ ↓

import { Trans as _Trans } from "@lingui/react";
<_Trans
  {
    /*i18n*/
    ...{
      id: "Ud4KOf",
      message: "Strip whitespace around tags, but keep <0>forced spaces</0>!",
      components: {
        0: <strong />,
      },
    }
  }
/>;

`;

exports[`Strip whitespace around tags but keep whitespaces in JSX containers 1`] = `
import { Trans } from "@lingui/react/macro";
<Trans>
  {"Wonderful framework "}
  <a href="https://nextjs.org">Next.js</a>
  {" say hi. And "}
  <a href="https://nextjs.org">Next.js</a>
  {" say hi."}
</Trans>;

↓ ↓ ↓ ↓ ↓ ↓

import { Trans as _Trans } from "@lingui/react";
<_Trans
  {
    /*i18n*/
    ...{
      id: "3YVd0H",
      message:
        "Wonderful framework <0>Next.js</0> say hi. And <1>Next.js</1> say hi.",
      components: {
        0: <a href="https://nextjs.org" />,
        1: <a href="https://nextjs.org" />,
      },
    }
  }
/>;

`;

exports[`Template literals as children 1`] = `
import { Trans } from "@lingui/react/macro";
<Trans>{\`How much is \${expression}? \${count}\`}</Trans>;

↓ ↓ ↓ ↓ ↓ ↓

import { Trans as _Trans } from "@lingui/react";
<_Trans
  {
    /*i18n*/
    ...{
      id: "exe3kM",
      message: "How much is {expression}? {count}",
      values: {
        expression: expression,
        count: count,
      },
    }
  }
/>;

`;

exports[`Trans macro could be renamed 1`] = `
import { Trans as Trans2 } from "@lingui/react/macro";
<Trans2>Hello World</Trans2>;

↓ ↓ ↓ ↓ ↓ ↓

import { Trans as _Trans } from "@lingui/react";
<_Trans
  {
    /*i18n*/
    ...{
      id: "mY42CM",
      message: "Hello World",
    }
  }
/>;

`;

exports[`Use a js macro inside a JSX Attribute of a component handled by JSX macro 1`] = `
import { Trans } from "@lingui/react/macro";
import { t } from "@lingui/core/macro";
<Trans>
  Read{" "}
  <a href="/more" title={t\`Full content of \${articleName}\`}>
    more
  </a>
</Trans>;

↓ ↓ ↓ ↓ ↓ ↓

import { i18n as _i18n } from "@lingui/core";
import { Trans as _Trans } from "@lingui/react";
<_Trans
  {
    /*i18n*/
    ...{
      id: "QZyANg",
      message: "Read <0>more</0>",
      components: {
        0: (
          <a
            href="/more"
            title={_i18n._(
              /*i18n*/
              {
                id: "qzc3IN",
                message: "Full content of {articleName}",
                values: {
                  articleName: articleName,
                },
              }
            )}
          />
        ),
      },
    }
  }
/>;

`;

exports[`Use a js macro inside a JSX Attribute of a non macro JSX component 1`] = `
import { plural } from "@lingui/core/macro";
<a
  href="/about"
  title={plural(count, {
    one: "# book",
    other: "# books",
  })}
>
  About
</a>;

↓ ↓ ↓ ↓ ↓ ↓

import { i18n as _i18n } from "@lingui/core";
<a
  href="/about"
  title={_i18n._(
    /*i18n*/
    {
      id: "esnaQO",
      message: "{count, plural, one {# book} other {# books}}",
      values: {
        count: count,
      },
    }
  )}
>
  About
</a>;

`;

exports[`Use decoded html entities 1`] = `
import { Trans } from "@lingui/react/macro";
<Trans>&amp;</Trans>;

↓ ↓ ↓ ↓ ↓ ↓

import { Trans as _Trans } from "@lingui/react";
<_Trans
  {
    /*i18n*/
    ...{
      id: "EwTON7",
      message: "&",
    }
  }
/>;

`;

exports[`Variables are converted to named arguments 1`] = `
import { Trans } from "@lingui/react/macro";
<Trans>
  Hi {yourName}, my name is {myName}
</Trans>;

↓ ↓ ↓ ↓ ↓ ↓

import { Trans as _Trans } from "@lingui/react";
<_Trans
  {
    /*i18n*/
    ...{
      id: "y10VRI",
      message: "Hi {yourName}, my name is {myName}",
      values: {
        yourName: yourName,
        myName: myName,
      },
    }
  }
/>;

`;

exports[`Variables are deduplicated 1`] = `
import { Trans } from "@lingui/react/macro";
<Trans>
  {duplicate} variable {duplicate}
</Trans>;

↓ ↓ ↓ ↓ ↓ ↓

import { Trans as _Trans } from "@lingui/react";
<_Trans
  {
    /*i18n*/
    ...{
      id: "+nhkwg",
      message: "{duplicate} variable {duplicate}",
      values: {
        duplicate: duplicate,
      },
    }
  }
/>;

`;
