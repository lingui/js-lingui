// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`po-gettext format convertPluralsToIco handle correctly locales with 4-letter 1`] = `
{
  WGI12K: {
    comments: [],
    context: null,
    extra: {
      flags: [],
      translatorComments: [],
    },
    message: {anotherCount, plural, one {Singular case} other {Case number {anotherCount}}},
    obsolete: false,
    origin: [],
    translation: {anotherCount, plural, one {Singular case} other {Case number {anotherCount}}},
  },
  jO/SBZ: {
    comments: [],
    context: null,
    extra: {
      flags: [],
      translatorComments: [],
    },
    message: {count, plural, one {Singular} other {Plural}},
    obsolete: false,
    origin: [],
    translation: ,
  },
  message_with_id: {
    comments: [
      js-lingui-explicit-id,
    ],
    context: null,
    extra: {
      flags: [],
      translatorComments: [],
    },
    obsolete: false,
    origin: [],
    translation: {someCount, plural, one {Singular case} other {Case number {someCount}}},
  },
  message_with_id_but_without_translation: {
    comments: [
      Comment made by the developers.,
      js-lingui-explicit-id,
    ],
    context: null,
    extra: {
      flags: [],
      translatorComments: [],
    },
    obsolete: false,
    origin: [],
    translation: ,
  },
}
`;

exports[`po-gettext format merging plurals parsing merged plural entries should expand merged plural entries back into separate catalog entries 1`] = `
{
  1sDaZ6: {
    comments: [],
    context: null,
    extra: {
      flags: [],
      translatorComments: [],
    },
    message: {count, plural, one {one book} other {many books}},
    obsolete: false,
    origin: [
      [
        src/App.tsx,
        60,
      ],
    ],
    translation: {count, plural, one {one book} other {many books}},
  },
  1zGN6B: {
    comments: [],
    context: null,
    extra: {
      flags: [],
      translatorComments: [],
    },
    message: {anotherCount, plural, one {one book} other {many books}},
    obsolete: false,
    origin: [
      [
        src/App.tsx,
        66,
      ],
    ],
    translation: {anotherCount, plural, one {one book} other {many books}},
  },
  E27ZCO: {
    comments: [],
    context: null,
    extra: {
      flags: [],
      translatorComments: [],
    },
    message: {thirdCount, plural, one {one rock} other {# rocks}},
    obsolete: false,
    origin: [
      [
        src/App.tsx,
        76,
      ],
    ],
    translation: {thirdCount, plural, one {one rock} other {# rocks}},
  },
  Sv+eOa: {
    comments: [],
    context: null,
    extra: {
      flags: [],
      translatorComments: [],
    },
    message: {count, plural, one {one rock} other {# rocks}},
    obsolete: false,
    origin: [
      [
        src/App.tsx,
        70,
      ],
    ],
    translation: {count, plural, one {one rock} other {# rocks}},
  },
}
`;

exports[`po-gettext format merging plurals parsing merged plural entries should handle parsing regular PO files without merged data 1`] = `
{
  WGI12K: {
    comments: [],
    context: null,
    extra: {
      flags: [],
      translatorComments: [],
    },
    message: {anotherCount, plural, one {Singular case} other {Case number {anotherCount}}},
    obsolete: false,
    origin: [],
    translation: {anotherCount, plural, one {Singular case} other {Case number {anotherCount}}},
  },
  jO/SBZ: {
    comments: [],
    context: null,
    extra: {
      flags: [],
      translatorComments: [],
    },
    message: {count, plural, one {Singular} other {Plural}},
    obsolete: false,
    origin: [],
    translation: ,
  },
  message_with_id: {
    comments: [
      js-lingui-explicit-id,
    ],
    context: null,
    extra: {
      flags: [],
      translatorComments: [],
    },
    obsolete: false,
    origin: [],
    translation: {someCount, plural, one {Singular case} other {Case number {someCount}}},
  },
  message_with_id_but_without_translation: {
    comments: [
      Comment made by the developers.,
      js-lingui-explicit-id,
    ],
    context: null,
    extra: {
      flags: [],
      translatorComments: [],
    },
    obsolete: false,
    origin: [],
    translation: ,
  },
  static: {
    comments: [
      js-lingui-explicit-id,
    ],
    context: null,
    extra: {
      flags: [],
      translatorComments: [],
    },
    obsolete: false,
    origin: [],
    translation: Static message,
  },
}
`;

exports[`po-gettext format merging plurals parsing merged plural entries should handle parsing regular PO files without merged data: messages_plural_gettext_to_icu_parse 1`] = `
{
  WGI12K: {
    comments: [],
    context: null,
    extra: {
      flags: [],
      translatorComments: [],
    },
    message: {anotherCount, plural, one {Singular case} other {Case number {anotherCount}}},
    obsolete: false,
    origin: [],
    translation: {anotherCount, plural, one {Singular case} other {Case number {anotherCount}}},
  },
  jO/SBZ: {
    comments: [],
    context: null,
    extra: {
      flags: [],
      translatorComments: [],
    },
    message: {count, plural, one {Singular} other {Plural}},
    obsolete: false,
    origin: [],
    translation: ,
  },
  message_with_id: {
    comments: [
      js-lingui-explicit-id,
    ],
    context: null,
    extra: {
      flags: [],
      translatorComments: [],
    },
    obsolete: false,
    origin: [],
    translation: {someCount, plural, one {Singular case} other {Case number {someCount}}},
  },
  message_with_id_but_without_translation: {
    comments: [
      Comment made by the developers.,
      js-lingui-explicit-id,
    ],
    context: null,
    extra: {
      flags: [],
      translatorComments: [],
    },
    obsolete: false,
    origin: [],
    translation: ,
  },
  static: {
    comments: [
      js-lingui-explicit-id,
    ],
    context: null,
    extra: {
      flags: [],
      translatorComments: [],
    },
    obsolete: false,
    origin: [],
    translation: Static message,
  },
}
`;

exports[`po-gettext format merging plurals parsing merged plural entries should handle round-trip serialization and parsing 1`] = `
{
  1sDaZ6: {
    comments: [],
    context: null,
    extra: {
      flags: [],
      translatorComments: [],
    },
    message: {count, plural, one {one book} other {many books}},
    obsolete: false,
    origin: [],
    translation: {count, plural, one {one book} other {many books}},
  },
  1zGN6B: {
    comments: [],
    context: null,
    extra: {
      flags: [],
      translatorComments: [],
    },
    message: {anotherCount, plural, one {one book} other {many books}},
    obsolete: false,
    origin: [],
    translation: {anotherCount, plural, one {one book} other {many books}},
  },
  E27ZCO: {
    comments: [],
    context: null,
    extra: {
      flags: [],
      translatorComments: [],
    },
    message: {thirdCount, plural, one {one rock} other {# rocks}},
    obsolete: false,
    origin: [],
    translation: {thirdCount, plural, one {one rock} other {# rocks}},
  },
  Sv+eOa: {
    comments: [],
    context: null,
    extra: {
      flags: [],
      translatorComments: [],
    },
    message: {count, plural, one {one rock} other {# rocks}},
    obsolete: false,
    origin: [],
    translation: {count, plural, one {one rock} other {# rocks}},
  },
}
`;

exports[`po-gettext format merging plurals parsing merged plural entries should handle single merged entry correctly (no expansion needed) 1`] = `
{
  1sDaZ6: {
    comments: [],
    context: null,
    extra: {
      flags: [],
      translatorComments: [],
    },
    message: {count, plural, one {one book} other {many books}},
    obsolete: false,
    origin: [
      [
        src/App.tsx,
        60,
      ],
    ],
    translation: {count, plural, one {one book} other {many books}},
  },
}
`;

exports[`po-gettext format merging plurals parsing merged plural entries should preserve source locations when expanding merged entries 1`] = `
{
  1sDaZ6: {
    comments: [],
    context: null,
    extra: {
      flags: [],
      translatorComments: [],
    },
    message: {count, plural, one {one book} other {many books}},
    obsolete: false,
    origin: [
      [
        src/App.tsx,
        60,
      ],
    ],
    translation: {count, plural, one {one book} other {many books}},
  },
  1zGN6B: {
    comments: [],
    context: null,
    extra: {
      flags: [],
      translatorComments: [],
    },
    message: {anotherCount, plural, one {one book} other {many books}},
    obsolete: false,
    origin: [
      [
        src/App.tsx,
        66,
      ],
    ],
    translation: {anotherCount, plural, one {one book} other {many books}},
  },
  LIsyAZ: {
    comments: [],
    context: null,
    extra: {
      flags: [],
      translatorComments: [],
    },
    message: {thirdCount, plural, one {one book} other {many books}},
    obsolete: false,
    origin: [
      [
        src/App.tsx,
        72,
      ],
    ],
    translation: {thirdCount, plural, one {one book} other {many books}},
  },
}
`;

exports[`po-gettext format merging plurals should add one entry even if there are multiple entries 1`] = `
msgid ""
msgstr ""
"POT-Creation-Date: 2018-08-27 10:00+0000\\n"
"MIME-Version: 1.0\\n"
"Content-Type: text/plain; charset=utf-8\\n"
"Content-Transfer-Encoding: 8bit\\n"
"X-Generator: @lingui/cli\\n"
"Language: en\\n"
"Project-Id-Version: \\n"
"Report-Msgid-Bugs-To: \\n"
"PO-Revision-Date: \\n"
"Last-Translator: \\n"
"Language-Team: \\n"
"Plural-Forms: \\n"

#. js-lingui:icu=%7Bcount%2C+plural%2C+one+%7Bone+book%7D+other+%7Bmany+books%7D%7D&pluralize_on=count&other_pluralize_vars=count%2CanotherCount%2CthirdCount%2CmanyCount%2CsuperLongVariableNameIsOkayCount
msgid "one book"
msgid_plural "many books"
msgstr[0] "one book"
msgstr[1] "many books"

`;

exports[`po-gettext format merging plurals should merge duplicate plural entries with same msgid/msgid_plural but different variables 1`] = `
msgid ""
msgstr ""
"POT-Creation-Date: 2018-08-27 10:00+0000\\n"
"MIME-Version: 1.0\\n"
"Content-Type: text/plain; charset=utf-8\\n"
"Content-Transfer-Encoding: 8bit\\n"
"X-Generator: @lingui/cli\\n"
"Language: en\\n"
"Project-Id-Version: \\n"
"Report-Msgid-Bugs-To: \\n"
"PO-Revision-Date: \\n"
"Last-Translator: \\n"
"Language-Team: \\n"
"Plural-Forms: \\n"

#. js-lingui:icu=%7Bcount%2C+plural%2C+one+%7Bone+book%7D+other+%7Bmany+books%7D%7D&pluralize_on=count&other_pluralize_vars=count%2CanotherCount
msgid "one book"
msgid_plural "many books"
msgstr[0] "one book"
msgstr[1] "many books"

#. js-lingui:icu=%7Bcount%2C+plural%2C+one+%7Bone+rock%7D+other+%7B%23+rocks%7D%7D&pluralize_on=count&other_pluralize_vars=count%2CthirdCount
msgid "one rock"
msgid_plural "# rocks"
msgstr[0] "one rock"
msgstr[1] "# rocks"

`;

exports[`po-gettext format merging plurals should not add comment if there is only one entry 1`] = `
msgid ""
msgstr ""
"POT-Creation-Date: 2018-08-27 10:00+0000\\n"
"MIME-Version: 1.0\\n"
"Content-Type: text/plain; charset=utf-8\\n"
"Content-Transfer-Encoding: 8bit\\n"
"X-Generator: @lingui/cli\\n"
"Language: en\\n"
"Project-Id-Version: \\n"
"Report-Msgid-Bugs-To: \\n"
"PO-Revision-Date: \\n"
"Last-Translator: \\n"
"Language-Team: \\n"
"Plural-Forms: \\n"

#. js-lingui:icu=%7Bcount%2C+plural%2C+one+%7Bone+book%7D+other+%7Bmany+books%7D%7D&pluralize_on=count
msgid "one book"
msgid_plural "many books"
msgstr[0] "one book"
msgstr[1] "many books"

#. js-lingui:icu=%7Bcount%2C+plural%2C+one+%7Bone+rock%7D+other+%7B%23+rocks%7D%7D&pluralize_on=count
msgid "one rock"
msgid_plural "# rocks"
msgstr[0] "one rock"
msgstr[1] "# rocks"

`;

exports[`po-gettext format merging plurals should not merge when option is false 1`] = `
msgid ""
msgstr ""
"POT-Creation-Date: 2018-08-27 10:00+0000\\n"
"MIME-Version: 1.0\\n"
"Content-Type: text/plain; charset=utf-8\\n"
"Content-Transfer-Encoding: 8bit\\n"
"X-Generator: @lingui/cli\\n"
"Language: en\\n"
"Project-Id-Version: \\n"
"Report-Msgid-Bugs-To: \\n"
"PO-Revision-Date: \\n"
"Last-Translator: \\n"
"Language-Team: \\n"
"Plural-Forms: \\n"

#. js-lingui:icu=%7Bcount%2C+plural%2C+one+%7Bone+book%7D+other+%7Bmany+books%7D%7D&pluralize_on=count
msgid "one book"
msgid_plural "many books"
msgstr[0] "one book"
msgstr[1] "many books"

#. js-lingui:icu=%7BanotherCount%2C+plural%2C+one+%7Bone+book%7D+other+%7Bmany+books%7D%7D&pluralize_on=anotherCount
msgid "one book"
msgid_plural "many books"
msgstr[0] "one book"
msgstr[1] "many books"

#. js-lingui:icu=%7Bcount%2C+plural%2C+one+%7Bone+rock%7D+other+%7B%23+rocks%7D%7D&pluralize_on=count
msgid "one rock"
msgid_plural "# rocks"
msgstr[0] "one rock"
msgstr[1] "# rocks"

#. js-lingui:icu=%7BthirdCount%2C+plural%2C+one+%7Bone+rock%7D+other+%7B%23+rocks%7D%7D&pluralize_on=thirdCount
msgid "one rock"
msgid_plural "# rocks"
msgstr[0] "one rock"
msgstr[1] "# rocks"

`;

exports[`po-gettext format merging plurals should preserve all source locations when merging duplicate entries 1`] = `
msgid ""
msgstr ""
"POT-Creation-Date: 2018-08-27 10:00+0000\\n"
"MIME-Version: 1.0\\n"
"Content-Type: text/plain; charset=utf-8\\n"
"Content-Transfer-Encoding: 8bit\\n"
"X-Generator: @lingui/cli\\n"
"Language: en\\n"
"Project-Id-Version: \\n"
"Report-Msgid-Bugs-To: \\n"
"PO-Revision-Date: \\n"
"Last-Translator: \\n"
"Language-Team: \\n"
"Plural-Forms: \\n"

#. js-lingui:icu=%7Bcount%2C+plural%2C+one+%7Bone+book%7D+other+%7Bmany+books%7D%7D&pluralize_on=count&other_pluralize_vars=count%2CanotherCount
#: src/App.tsx:60
#: src/App.tsx:66
msgid "one book"
msgid_plural "many books"
msgstr[0] "one book"
msgstr[1] "many books"

`;

exports[`po-gettext format merging plurals uses custom prefix when provided 1`] = `
msgid ""
msgstr ""
"POT-Creation-Date: 2018-08-27 10:00+0000\\n"
"MIME-Version: 1.0\\n"
"Content-Type: text/plain; charset=utf-8\\n"
"Content-Transfer-Encoding: 8bit\\n"
"X-Generator: @lingui/cli\\n"
"Language: en\\n"
"Project-Id-Version: \\n"
"Report-Msgid-Bugs-To: \\n"
"PO-Revision-Date: \\n"
"Last-Translator: \\n"
"Language-Team: \\n"
"Plural-Forms: \\n"

#. customprefix:icu=%7Bcount%2C+plural%2C+one+%7Bone+book%7D+other+%7Bmany+books%7D%7D&pluralize_on=count&other_pluralize_vars=count%2CanotherCount
msgid "one book"
msgid_plural "many books"
msgstr[0] "one book"
msgstr[1] "many books"

`;

exports[`po-gettext format should convert ICU plural messages to gettext plurals 1`] = `
msgid ""
msgstr ""
"POT-Creation-Date: 2018-08-27 10:00+0000\\n"
"MIME-Version: 1.0\\n"
"Content-Type: text/plain; charset=utf-8\\n"
"Content-Transfer-Encoding: 8bit\\n"
"X-Generator: @lingui/cli\\n"
"Language: en\\n"
"Project-Id-Version: \\n"
"Report-Msgid-Bugs-To: \\n"
"PO-Revision-Date: \\n"
"Last-Translator: \\n"
"Language-Team: \\n"
"Plural-Forms: \\n"

#. js-lingui-explicit-id
msgid "static"
msgstr "Static message"

#. js-lingui-explicit-id
#. js-lingui:pluralize_on=count
msgid "message_with_id_and_octothorpe"
msgid_plural "message_with_id_and_octothorpe_plural"
msgstr[0] "Singular"
msgstr[1] "Number is #"

#. This is a comment by the developers about how the content must be localized.
#. js-lingui-explicit-id
#. js-lingui:pluralize_on=someCount
msgid "message_with_id"
msgid_plural "message_with_id_plural"
msgstr[0] "Singular case with id"
msgstr[1] "Case number {someCount} with id"

#. js-lingui:icu=%7BanotherCount%2C+plural%2C+one+%7BSingular+case%7D+other+%7BCase+number+%7BanotherCount%7D%7D%7D&pluralize_on=anotherCount
msgid "Singular case"
msgid_plural "Case number {anotherCount}"
msgstr[0] "Singular case"
msgstr[1] "Case number {anotherCount}"

#. js-lingui-explicit-id
#. js-lingui:pluralize_on=count
msgid "message_with_id_but_without_translation"
msgid_plural "message_with_id_but_without_translation_plural"
msgstr[0] ""
msgstr[1] ""

#. js-lingui:icu=%7Bcount%2C+plural%2C+one+%7BSingular+automatic+id+no+translation%7D+other+%7BPlural+%7Bcount%7D+automatic+id+no+translation%7D%7D&pluralize_on=count
msgid "Singular automatic id no translation"
msgid_plural "Plural {count} automatic id no translation"
msgstr[0] ""
msgstr[1] ""

`;

exports[`po-gettext format should convert gettext plurals to ICU plural messages 1`] = `
{
  WGI12K: {
    comments: [],
    context: null,
    extra: {
      flags: [],
      translatorComments: [],
    },
    message: {anotherCount, plural, one {Singular case} other {Case number {anotherCount}}},
    obsolete: false,
    origin: [],
    translation: {anotherCount, plural, one {Singular case} other {Case number {anotherCount}}},
  },
  jO/SBZ: {
    comments: [],
    context: null,
    extra: {
      flags: [],
      translatorComments: [],
    },
    message: {count, plural, one {Singular} other {Plural}},
    obsolete: false,
    origin: [],
    translation: ,
  },
  message_with_id: {
    comments: [
      js-lingui-explicit-id,
    ],
    context: null,
    extra: {
      flags: [],
      translatorComments: [],
    },
    obsolete: false,
    origin: [],
    translation: {someCount, plural, one {Singular case} other {Case number {someCount}}},
  },
  message_with_id_but_without_translation: {
    comments: [
      Comment made by the developers.,
      js-lingui-explicit-id,
    ],
    context: null,
    extra: {
      flags: [],
      translatorComments: [],
    },
    obsolete: false,
    origin: [],
    translation: ,
  },
  static: {
    comments: [
      js-lingui-explicit-id,
    ],
    context: null,
    extra: {
      flags: [],
      translatorComments: [],
    },
    obsolete: false,
    origin: [],
    translation: Static message,
  },
}
`;

exports[`po-gettext format should convert gettext plurals to ICU plural messages: messages_plural_gettext_to_icu_parse 1`] = `
{
  WGI12K: {
    comments: [],
    context: null,
    extra: {
      flags: [],
      translatorComments: [],
    },
    message: {anotherCount, plural, one {Singular case} other {Case number {anotherCount}}},
    obsolete: false,
    origin: [],
    translation: {anotherCount, plural, one {Singular case} other {Case number {anotherCount}}},
  },
  jO/SBZ: {
    comments: [],
    context: null,
    extra: {
      flags: [],
      translatorComments: [],
    },
    message: {count, plural, one {Singular} other {Plural}},
    obsolete: false,
    origin: [],
    translation: ,
  },
  message_with_id: {
    comments: [
      js-lingui-explicit-id,
    ],
    context: null,
    extra: {
      flags: [],
      translatorComments: [],
    },
    obsolete: false,
    origin: [],
    translation: {someCount, plural, one {Singular case} other {Case number {someCount}}},
  },
  message_with_id_but_without_translation: {
    comments: [
      Comment made by the developers.,
      js-lingui-explicit-id,
    ],
    context: null,
    extra: {
      flags: [],
      translatorComments: [],
    },
    obsolete: false,
    origin: [],
    translation: ,
  },
  static: {
    comments: [
      js-lingui-explicit-id,
    ],
    context: null,
    extra: {
      flags: [],
      translatorComments: [],
    },
    obsolete: false,
    origin: [],
    translation: Static message,
  },
}
`;

exports[`po-gettext format using custom prefix handles custom prefix 1`] = `
msgid ""
msgstr ""
"POT-Creation-Date: 2018-08-27 10:00+0000\\n"
"MIME-Version: 1.0\\n"
"Content-Type: text/plain; charset=utf-8\\n"
"Content-Transfer-Encoding: 8bit\\n"
"X-Generator: @lingui/cli\\n"
"Language: en\\n"
"Project-Id-Version: \\n"
"Report-Msgid-Bugs-To: \\n"
"PO-Revision-Date: \\n"
"Last-Translator: \\n"
"Language-Team: \\n"
"Plural-Forms: \\n"

#. This is a comment by the developers about how the content must be localized.
#. js-lingui-explicit-id
#. custom-prefix:pluralize_on=someCount
msgid "message_with_id"
msgid_plural "message_with_id_plural"
msgstr[0] "Singular case with id"
msgstr[1] "Case number {someCount} with id"

#. custom-prefix:icu=%7BanotherCount%2C+plural%2C+one+%7BSingular+case%7D+other+%7BCase+number+%7BanotherCount%7D%7D%7D&pluralize_on=anotherCount
msgid "Singular case"
msgid_plural "Case number {anotherCount}"
msgstr[0] "Singular case"
msgstr[1] "Case number {anotherCount}"

`;

exports[`po-gettext format using custom prefix warns and falls back to using count if prefix is not found 1`] = `
{
  lO3l+X: {
    comments: [
      js-lingui:icu=%7BanotherCount%2C+plural%2C+one+%7BSingular+case%7D+other+%7BCase+number+%7BanotherCount%7D%7D%7D&pluralize_on=anotherCount,
    ],
    context: null,
    extra: {
      flags: [],
      translatorComments: [],
    },
    message: Singular case,
    obsolete: false,
    origin: [],
    translation: {count, plural, one {Singular case} other {Case number {anotherCount}}},
  },
  maCaRp: {
    comments: [
      js-lingui:icu=%7Bcount%2C+plural%2C+one+%7BSingular%7D+other+%7BPlural%7D%7D&pluralize_on=count,
    ],
    context: null,
    extra: {
      flags: [],
      translatorComments: [],
    },
    message: Singular,
    obsolete: false,
    origin: [],
    translation: ,
  },
  message_with_id: {
    comments: [
      js-lingui:pluralize_on=someCount,
      js-lingui-explicit-id,
    ],
    context: null,
    extra: {
      flags: [],
      translatorComments: [],
    },
    obsolete: false,
    origin: [],
    translation: {count, plural, one {Singular case} other {Case number {someCount}}},
  },
  message_with_id_but_without_translation: {
    comments: [
      Comment made by the developers.,
      js-lingui:pluralize_on=count,
      js-lingui-explicit-id,
    ],
    context: null,
    extra: {
      flags: [],
      translatorComments: [],
    },
    obsolete: false,
    origin: [],
    translation: ,
  },
  static: {
    comments: [
      js-lingui-explicit-id,
    ],
    context: null,
    extra: {
      flags: [],
      translatorComments: [],
    },
    obsolete: false,
    origin: [],
    translation: Static message,
  },
}
`;
